if game.PlaceId == 1224212277 then
print("Loaded")
	wait()
	print("For help join https://discord.gg/Nz8hFAgZFr")
	local _speed = 2000
	function tp(...)
		local plr = game.Players.LocalPlayer
		local args = {
			...
		}
		if typeof(args[1]) == "number" and args[2] and args[3] then
			args = Vector3.new(args[1], args[2], args[3])
		elseif typeof(args[1]) == "Vector3" then
			args = args[1]
		elseif typeof(args[1]) == "CFrame" then
			args = args[1].Position
		end
		local dist = (plr.Character.HumanoidRootPart.Position - args).Magnitude
		game:GetService("TweenService"):Create(
       plr.Character.HumanoidRootPart,
       TweenInfo.new(dist / _speed, Enum.EasingStyle.Linear),
       {
			CFrame = CFrame.new(args)
		}
   ):Play()
	end
	local Library = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/Vape.txt")()
	local Window = Library:Window("Zenx V v6 private] - Mad City", Color3.fromRGB(95, 65, 10), Enum.KeyCode.RightShift)

-- MAIN
	local main = Window:Tab("Main")
	main:Toggle("Speedhack", false, function(v)
		getgenv().speedhack = v
		while wait() do
			if getgenv().speedhack then
				game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 60
			else
				game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
			end
		end
	end)
	main:Toggle("Superjump", false, function(v)
		getgenv().superjump = v
		while wait() do
			if getgenv().superjump then
				game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 150
			else
				game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 50
			end
		end
	end)
	main:Toggle("Walk On Water", false, function(state)
		getgenv().trin4nets = state
		if getgenv().trin4nets then
			for k, v in pairs(game:GetService("Workspace").Water:GetChildren()) do
				v.CanCollide = true
				v.Anchored = true
				v.Material = "Ice"
			end
		else
			for k, v in pairs(game:GetService("Workspace").Water:GetChildren()) do
				v.CanCollide = false
				v.Anchored = false
				v.Material = "Ice"
			end
		end
	end)
	main:Button("[F] Fly", function()
		local FlyKey = Enum.KeyCode.F
		local SpeedKey = Enum.KeyCode.LeftControl
		local SpeedKeyMultiplier = 3
		local FlightSpeed = 256
		local FlightAcceleration = 4
		local TurnSpeed = 16
		local UserInputService = game:GetService("UserInputService")
		local StarterGui = game:GetService("StarterGui")
		local RunService = game:GetService("RunService")
		local Players = game:GetService("Players")
		local User = Players.LocalPlayer
		local Camera = workspace.CurrentCamera
		local UserCharacter = nil
		local UserRootPart = nil
		local Connection = nil
		workspace.Changed:Connect(function()
			Camera = workspace.CurrentCamera
		end)
		local setCharacter = function(c)
			UserCharacter = c
			UserRootPart = c:WaitForChild("HumanoidRootPart")
		end
		User.CharacterAdded:Connect(setCharacter)
		if User.Character then
			setCharacter(User.Character)
		end
		local CurrentVelocity = Vector3.new(0, 0, 0)
		local Flight = function(delta)
			local BaseVelocity = Vector3.new(0, 0, 0)
			if not UserInputService:GetFocusedTextBox() then
				if UserInputService:IsKeyDown(Enum.KeyCode.W) then
					BaseVelocity = BaseVelocity + (Camera.CFrame.LookVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.A) then
					BaseVelocity = BaseVelocity - (Camera.CFrame.RightVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.S) then
					BaseVelocity = BaseVelocity - (Camera.CFrame.LookVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.D) then
					BaseVelocity = BaseVelocity + (Camera.CFrame.RightVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
					BaseVelocity = BaseVelocity + (Camera.CFrame.UpVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(SpeedKey) then
					BaseVelocity = BaseVelocity * SpeedKeyMultiplier
				end
			end
			if UserRootPart then
				local car = UserRootPart:GetRootPart()
				if car.Anchored then
					return
				end
				if not isnetworkowner(car) then
					return
				end
				CurrentVelocity = CurrentVelocity:Lerp(
            BaseVelocity,
            math.clamp(delta * FlightAcceleration, 0, 1)
        )
				car.Velocity = CurrentVelocity + Vector3.new(0, 2, 0)
				if car ~= UserRootPart then
					car.RotVelocity = Vector3.new(0, 0, 0)
					car.CFrame = car.CFrame:Lerp(CFrame.lookAt(
                car.Position,
                car.Position + CurrentVelocity + Camera.CFrame.LookVector
            ), math.clamp(delta * TurnSpeed, 0, 1))
				end
			end
		end
		UserInputService.InputBegan:Connect(function(userInput, gameProcessed)
			if gameProcessed then
				return
			end
			if userInput.KeyCode == FlyKey then
				if Connection then
					Connection:Disconnect()
					Connection = nil
				else
					CurrentVelocity = UserRootPart.Velocity
					Connection = RunService.Heartbeat:Connect(Flight)
				end
			end
		end)
	end)
	main:Button("Destroy Lasers", function()
		game:GetService("Workspace").Heists.Bank.EssentialParts.Lasers:Destroy()
		game:GetService("Workspace").Heists.Casino.Interior.Lasers:Destroy()
		game:GetService("Workspace").Heists.JewelryStore.JewelryStore.Jewlery.Lasers:Destroy()
		game:GetService("Workspace").Ignore.WorldObjects["Lasers Club"]:Destroy()
		game:GetService("Workspace").ComputerStore.Lasers:Destroy()
	end)
	main:Button("Hide Name", function()
		game:GetService("RunService").RenderStepped:Connect(function()
			game.Players.LocalPlayer.Character.NameTag:Destroy()
		end)
	end)
	main:Button("Destroy Character", function()
		game.Players.LocalPlayer.Character.RightHand:Destroy()
		game.Players.LocalPlayer.Character.LeftLowerArm:Destroy()
		game.Players.LocalPlayer.Character.RightLowerArm:Destroy()
		game.Players.LocalPlayer.Character.LeftUpperArm:Destroy()
		game.Players.LocalPlayer.Character.RightUpperArm:Destroy()
		game.Players.LocalPlayer.Character.LeftLowerLeg:Destroy()
		game.Players.LocalPlayer.Character.LeftUpperLeg:Destroy()
		game.Players.LocalPlayer.Character.LeftFoot:Destroy()
		game.Players.LocalPlayer.Character.RightFoot:Destroy()
		game.Players.LocalPlayer.Character.RightLowerLeg:Destroy()
		game.Players.LocalPlayer.Character.RightUpperLeg:Destroy()
	end)

-- FUN
	local fun = Window:Tab("Fun")
	fun:Button("be black", function()
		for i = 1, 3 do
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-326, 142, -2869)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-326, 142, -2869)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1203.02539, 51058.3906, 552.828857, 0, -1, 0, 1, 0, -0, 0, 0, 1)
			wait(1)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1203.02539, 51058.3906, 533.490723, 0, -1, 0, 1, 0, -0, 0, 0, 1)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1203.02539, 51058.3906, 552.828857, 0, -1, 0, 1, 0, -0, 0, 0, 1)
		end
	end)
	fun:Toggle("GodMod", false, function(v)
		local this_guy_has_godmode = game.Players.LocalPlayer.Name
		getgenv().godmod = v
		while true do
			wait()
			if not getgenv().godmod then
				return
			end
			pcall(function()
				local A_1 = "RevivePlayer"
				local A_2 = game:GetService("Workspace")[this_guy_has_godmode]
				local A_3 = game:GetService("Workspace").ObjectSelection.DownedPart.DownedPart
				local Event = game:GetService("ReplicatedStorage").Event
				Event:FireServer(A_1, A_2, A_3)
			end)
		end
	end)
	fun:Toggle("Anti Arrest", false, function(v)
		getgenv().antiarrest = v
		while true do
			wait()
			if not getgenv().antiarrest then
				return
			end
			local args = {
				[1] = "Freedom",
				[2] = game:GetService("Players").LocalPlayer
			}
			game:GetService("ReplicatedStorage").Event:FireServer(unpack(args))
		end
	end)
	fun:Toggle("All Players Godmod", false, function(v)
		local Players = game:GetService("Players")
		getgenv().godmodserver = v
		while true do
			wait()
			if not getgenv().godmodserver then
				return
			end
			pcall(function()
				for i, all in pairs(Players:GetPlayers()) do
					local A_1 = "RevivePlayer"
					local A_2 = game:GetService("Workspace")[all.Name]
					local A_3 = game:GetService("Workspace").ObjectSelection.DownedPart.DownedPart
					local Event = game:GetService("ReplicatedStorage").Event
					Event:FireServer(A_1, A_2, A_3)
				end
			end)
		end
	end)
	fun:Toggle("All Players the Glider", false, function(state)
		if state then
			for i, v in pairs(game.Players:GetChildren()) do
				local args = {
					[1] = "Glider",
					[2] = v.Character.Parachute.Handle,
					[3] = -math.huge
				}
				game:GetService("ReplicatedStorage").Event:FireServer(unpack(args))
			end
		else
			for i, v in pairs(game.Players:GetChildren()) do
				local args = {
					[1] = "Glider",
					[2] = v.Character.Parachute.Handle,
					[3] = math.huge
				}
				game:GetService("ReplicatedStorage").Event:FireServer(unpack(args))
			end
		end
	end)

-- KILL
	local kill = Window:Tab("Kill")
	kill:Textbox("Loop Kill Player", true, function(txt)
		getgenv().killplr = true
		while true do
			wait()
			if not getgenv().killplr then
				return
			end
			local plr = game:GetService("Workspace"):FindFirstChild(txt)
			local _speed = 2000
			function tp(...)
				local plr = game.Players.LocalPlayer
				local args = {
					...
				}
				if typeof(args[1]) == "number" and args[2] and args[3] then
					args = Vector3.new(args[1], args[2], args[3])
				elseif typeof(args[1]) == "Vector3" then
					args = args[1]
				elseif typeof(args[1]) == "CFrame" then
					args = args[1].Position
				end
				local dist = (plr.Character.HumanoidRootPart.Position - args).Magnitude
				game:GetService("TweenService"):Create(
                       plr.Character.HumanoidRootPart,
                       TweenInfo.new(dist / _speed, Enum.EasingStyle.Linear),
                       {
					CFrame = CFrame.new(args)
				}
                   ):Play()
			end
			tp(plr.HumanoidRootPart.Position)
			local args = {
				[1] = "Punch",
				[2] = game:GetService("Players"):FindFirstChild(txt).Character.Humanoid
			}
			game:GetService("ReplicatedStorage").Event:FireServer(unpack(args))
		end
	end)
	kill:Button("Stop Loop", function()
		getgenv().killplr = false
	end)
	kill:Toggle("Criminals", false, function(state)
		local args = {
			[1] = "SetTeam",
			[2] = "Police"
		}
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
		wait(1)
		function messagebox(text, delay)
			local tbl_2B1BD128 = 
        {
				["Delay"] = delay,
				["Text"] = text
			}
			local tbl_2B1BCDF8 = 
        {
				tbl_2B1BD128
			}
			local tbl_main = 
        {
				"Dialogue",
				tbl_2B1BCDF8
			}
			game:GetService("ReplicatedStorage").Event:FireServer(unpack(tbl_main))
		end
		messagebox("Go into a buzzard or a Cobra.", 5)
		wait(1)
		getgenv().killcrims = state
		_G.TargetTeam = "Criminals"
		while  true  do
			wait()
			if not getgenv().killcrims then
				return
			end
			for i, v in next, game.Teams[_G.TargetTeam]:GetPlayers() do
				game.ReplicatedStorage.Event:FireServer("BM", v.Character.Head.Position)
				game.ReplicatedStorage.Event:FireServer("BM", v.Character.Head.Position)
			end
		end
	end)
	kill:Toggle("Police", false, function(state)
		local args = {
			[1] = "SetTeam",
			[2] = "Prisoners"
		}
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
		wait(1)
		function messagebox(text, delay)
			local tbl_2B1BD128 = 
        {
				["Delay"] = delay,
				["Text"] = text
			}
			local tbl_2B1BCDF8 = 
        {
				tbl_2B1BD128
			}
			local tbl_main = 
        {
				"Dialogue",
				tbl_2B1BCDF8
			}
			game:GetService("ReplicatedStorage").Event:FireServer(unpack(tbl_main))
		end
		messagebox("Go into a buzzard or a Cobra.", 5)
		wait(1)
		getgenv().killpolice = state
		_G.TargetTeam = "Police"
		while  true  do
			wait()
			if not getgenv().killpolice then
				return
			end
			for i, v in next, game.Teams[_G.TargetTeam]:GetPlayers() do
				game.ReplicatedStorage.Event:FireServer("BM", v.Character.Head.Position)
				game.ReplicatedStorage.Event:FireServer("BM", v.Character.Head.Position)
			end
		end
	end)
	kill:Toggle("Heroes", false, function(state)
		local args = {
			[1] = "SetTeam",
			[2] = "Prisoners"
		}
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
		wait(1)
		function messagebox(text, delay)
			local tbl_2B1BD128 = 
        {
				["Delay"] = delay,
				["Text"] = text
			}
			local tbl_2B1BCDF8 = 
        {
				tbl_2B1BD128
			}
			local tbl_main = 
        {
				"Dialogue",
				tbl_2B1BCDF8
			}
			game:GetService("ReplicatedStorage").Event:FireServer(unpack(tbl_main))
		end
		messagebox("Go into a buzzard or a Cobra.", 5)
		wait(1)
		getgenv().killheroes = state
		_G.TargetTeam = "Heroes"
		while  true  do
			wait()
			if not getgenv().killheroes then
				return
			end
			for i, v in next, game.Teams[_G.TargetTeam]:GetPlayers() do
				game.ReplicatedStorage.Event:FireServer("BM", v.Character.Head.Position)
				game.ReplicatedStorage.Event:FireServer("BM", v.Character.Head.Position)
			end
		end
	end)
	kill:Toggle("Villains", false, function(state)
		local args = {
			[1] = "SetTeam",
			[2] = "Police"
		}
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
		wait(1)
		function messagebox(text, delay)
			local tbl_2B1BD128 = 
        {
				["Delay"] = delay,
				["Text"] = text
			}
			local tbl_2B1BCDF8 = 
        {
				tbl_2B1BD128
			}
			local tbl_main = 
        {
				"Dialogue",
				tbl_2B1BCDF8
			}
			game:GetService("ReplicatedStorage").Event:FireServer(unpack(tbl_main))
		end
		messagebox("Go into a buzzard or a Cobra.", 5)
		wait(1)
		getgenv().killcrims = state
		_G.TargetTeam = "Villains"
		while  true  do
			wait()
			if not getgenv().killcrims then
				return
			end
			for i, v in next, game.Teams[_G.TargetTeam]:GetPlayers() do
				game.ReplicatedStorage.Event:FireServer("BM", v.Character.Head.Position)
				game.ReplicatedStorage.Event:FireServer("BM", v.Character.Head.Position)
			end
		end
	end)

-- TELEPORTS
	local teleports = Window:Tab("Teleports")
	teleports:Button("Tp To Mech", function()
		tp(game.Workspace.ObjectSelection["Mech Suit"].Chest.UpperChest.CFrame)
	end)
	teleports:Button("Tp To aircrate", function()
		tp(game.Workspace.ObjectSelection.CrateDrop.CrateDrop.Position)
	end)
	teleports:Button("Jail In", function()
		tp(CFrame.new(-893.619, 70, -3105.87))
	end)
	teleports:Button("Jail Out", function()
		tp(CFrame.new(-1030.99, 67.3196, -2935.08))
	end)
	teleports:Button("Gun Shop", function()
		tp(CFrame.new(-1643.92, 42.7647, 672.296))
	end)
	teleports:Button("Criminal Base In", function()
		tp(CFrame.new(2110.8, 26.4793, 427.597))
	end)
	teleports:Button("Criminal Base Out", function()
		tp(CFrame.new(2036.75, 30, 425.776))
	end)
	teleports:Button("Airport", function()
		tp(CFrame.new(-2145.58, 30, -1426.98))
	end)
	teleports:Button("Jewerly In", function()
		tp(CFrame.new(-98.3142, 26.3242, 795.379))
	end)
	teleports:Button("Jewerly Out", function()
		tp(CFrame.new(-130.017, 30, 721.418))
	end)
	teleports:Button("Bank In", function()
		tp(CFrame.new(644.203, 109.854, 616.807))
	end)
	teleports:Button("Bank Out", function()
		tp(CFrame.new(638.708, 50, 472.197))
	end)
	teleports:Button("Club In", function()
		tp(CFrame.new(1073.41, 55, 85.7288))
	end)
	teleports:Button("Club Out", function()
		tp(CFrame.new(1092.56, 53.3552, 180.755))
	end)
	teleports:Button("Pyramid Out", function()
		tp(CFrame.new(-1047.78, 20, -507.3))
	end)
	teleports:Button("Casino In", function()
		tp(CFrame.new(1696.66, 37.7537, 757.511))
	end)
	teleports:Button("Casino Out", function()
		tp(CFrame.new(1701.74, 25.654, 899.546))
	end)
	teleports:Button("Train", function()
		if game.Workspace.Train ~= nil then
			tp(game.Workspace.Train.Mid1.Yeet.Position)
		else
			tp(CFrame.new(135.332, 76.5584, -628.046))
		end
	end)
	teleports:Button("Train Out", function()
		tp(CFrame.new(155.048, 76.524, -664.481))
	end)
	teleports:Textbox("Tp To Player", true, function(txt)
		local stringA = txt
		for i, plr in next, game:GetService'Players':GetPlayers() do
			if plr.Name:sub(1, #stringA) == stringA then
				tp(CFrame.new(plr.Character.HumanoidRootPart.Position))
			end
		end
	end)

-- FAST CHANGER
	local fastchanger = Window:Tab("Fast Changer")
	fastchanger:Button("Prisoners", function()
		local args = {
			[1] = "SetTeam",
			[2] = "Prisoners"
		}
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
	end)
	fastchanger:Button("Criminals", function()
		wait(0.1)
		local args = {
			[1] = "SetTeam",
			[2] = "Prisoners"
		}
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
		wait(3)
		tp(CFrame.new(-280.035, 4.22509, -2811.1))
		wait(2)
		tp(CFrame.new(-716.32, 69.5678, -3058.8))
	end)
	fastchanger:Button("Police", function()
		local args = {
			[1] = "SetTeam",
			[2] = "Police"
		}
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
	end)
	fastchanger:Button("Heroes", function()
		local args = {
			[1] = "SetTeam",
			[2] = "Heroes"
		}
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
	end)

-- Give
	local give = Window:Tab("Give")
	give:Button("All Gamepasses", function()
		wait()
		local g1 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g1.Name = "5275404"
		g1.Value = true
		local g2 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g2.Name = "5275406"
		g2.Value = true
		local g3 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g3.Name = "5275408"
		g3.Value = true
		local g4 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g4.Name = "5283883"
		g4.Value = true
		local g5 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g5.Name = "5285945"
		g5.Value = true
		local g6 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g6.Name = "5786950"
		g6.Value = true
		local g7 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g7.Name = "5945566"
		g7.Value = true
		local g8 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g8.Name = "5981868"
		g8.Value = true
		local g9 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g9.Name = "6023566"
		g9.Value = true
		local g10 = Instance.new("BoolValue", game.Players.LocalPlayer)
		g10.Name = "6329988"
		g10.Value = true
	end)
	give:Button("Developpers Emotes", function()
		game.Players.LocalPlayer.Name = "nic10telf"
		game.Players.LocalPlayer.Character.Head:Destroy()
		game.Players.LocalPlayer.Character.HumanoidRootPart.Changed:connect(function ()
			game.Players.LocalPlayer.Name = "nic10telf"
		end)
	end)
	give:Button("Keycard", function()
		for i = 1, 50 do
			for i, v in pairs(game.Players:GetChildren()) do
				local args = {
					[1] = "Pickpocket",
					[2] = v
				}
				game:GetService("ReplicatedStorage").Event:FireServer(unpack(args))
			end
		end
	end)
	give:Button("DeathRay", function()
		local oldcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
		wait(0.1)
		Game.Players.LocalPlayer.PlayerGui.MainGUI.TeleportEffect:Destroy()
		Game.Workspace.Pyramid.Tele.Core2.CanCollide = false
		Game.Workspace.Pyramid.Tele.Core2.Transparency = 1
		Game.Workspace.Pyramid.Tele.Core2.CFrame = Game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
		wait()
		Game.Workspace.Pyramid.Tele.Core2.CFrame = CFrame.new(1231.14185, 51051.2344, 318.096191)
		Game.Workspace.Pyramid.Tele.Core2.Transparency = 0
		Game.Workspace.Pyramid.Tele.Core2.CanCollide = true
		wait(0.35)
		Game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1046.32, 51072.9, 553.34)
		wait(0.7)
		workspace.ObjectSelection.GoldKey.GoldKey.GoldKey.Event:FireServer()
		wait(1)
		Game.Workspace.Pyramid.Tele.Core2.CanCollide = false
		Game.Workspace.Pyramid.Tele.Core2.Transparency = 1
		Game.Workspace.Pyramid.Tele.Core2.CFrame = Game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
		wait()
		Game.Workspace.Pyramid.Tele.Core2.CFrame = CFrame.new(1231.14185, 51051.2344, 318.096191)
		Game.Workspace.Pyramid.Tele.Core2.Transparency = 0
		Game.Workspace.Pyramid.Tele.Core2.CanCollide = true
		wait(0.35)
		Game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-85.7347, 39.8, -367.251)
		wait(0.1)
		local _speed = 2000
		function tp(...)
			local plr = game.Players.LocalPlayer
			local args = {
				...
			}
			if typeof(args[1]) == "number" and args[2] and args[3] then
				args = Vector3.new(args[1], args[2], args[3])
			elseif typeof(args[1]) == "Vector3" then
				args = args[1]
			elseif typeof(args[1]) == "CFrame" then
				args = args[1].Position
			end
			local dist = (plr.Character.HumanoidRootPart.Position - args).Magnitude
			game:GetService("TweenService"):Create(
       plr.Character.HumanoidRootPart,
       TweenInfo.new(dist / _speed, Enum.EasingStyle.Linear),
       {
				CFrame = CFrame.new(args)
			}
   ):Play()
		end
		tp(CFrame.new(865.232, 28.0756, 991.475))
		wait(3)
		workspace.ObjectSelection.DeathRay.DeathRay.DeathRay.Event:FireServer()
		wait(1.5)
		tp(oldcframe)
	end)
	give:Button("Jetpack", function()
		local oldcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
		wait(0.1)
		game.Workspace.ObjectSelection.BossKey.Nope.BossKey.Event:FireServer()
		tp(-2261, 31, -1559);
		wait(4)
		workspace.ObjectSelection.TakeJetpack.TakeJetpack.TakeJetpack.Event:FireServer()
		wait(0.5)
		tp(oldcframe)
	end)

-- Vehicles
	local vehicles = Window:Tab("Vehicles")
	vehicles:Dropdown("Spawn vehicle", {
		"Nighthawk",
		"Warhawk",
		"Falcon",
		"Cobra",
		"Plane",
		"Buzzard",
		"Scout",
		"Cobra",
		"Hyper Glider",
		"Thunderbird",
		"T150",
		"Dominator",
		"Tracer",
		"Cruiser",
		"SWAT",
		"The Infinity",
		"GTR",
		"Overdrive",
		"Inferno",
		"Roadster",
		"Night Rider",
		"Cyber Quad",
		"Firestorm",
		"Avenger",
		"Nero",
		"Fury",
		"Light Bike",
		"Rhino",
		"O66-Terminator",
		"Patriot",
		"ATV",
		"911",
		"Smart",
		"Shelby",
		"Stingray",
		"Cobra",
		"Challenger",
		"Vapid"
	}, function(currentOption)
		local vehicle = currentOption
		game:GetService("Workspace").ObjectSelection[vehicle].DriveSeat.Disabled = false
		game:GetService("Workspace").ObjectSelection[vehicle]:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
		wait(0.5)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").ObjectSelection[vehicle].DriveSeat.CFrame
		wait(2)
		game:GetService("Workspace").ObjectSelection[vehicle].DriveSeat.Disabled = true
	end)
	vehicles:Slider("Suspensions", 3, 100, 3, function(s)
		local a = require(game.Workspace.ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].Settings)
		a.Height = s
	end)
	vehicles:Slider("Speed", 1, 1000, 1, function(s)
		local a = require(game.Workspace.ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].Settings)
		a.MaxSpeed = s
	end)
	vehicles:Slider("Acceleration(ReEnter)", 1, 10, 1, function(s)
		local a = require(game.Workspace.ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].Settings)
		a.Torque = s
	end)
	vehicles:Slider("TurnSpeed", 2, 6, 2, function(s)
		local a = require(game.Workspace.ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].Settings)
		a.TurnSpeed = s
	end)
	vehicles:Toggle("Hovermode", false, function(v)
		getgenv().hovermode = v
		if getgenv().hovermode then
			game.Workspace.ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].CarChassis.HoverMode.Value = true
		else
			game.Workspace.ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].CarChassis.HoverMode.Value = false
		end
	end)
	vehicles:Toggle("Inf Nitro", false, function(v)
		getgenv().infnitro = v
		while true do
			wait()
			if not getgenv().infnitro then
				return
			end
			pcall(function()
				game:GetService("Workspace").ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].CarChassis.Boost.Value = 9e18
			end)
		end
	end)
	vehicles:Toggle("No Sway", false, function(state)
		local a = require(game.Workspace.ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].Settings)
		if state then
			a.Sway = 0
		else
			a.Sway = 15
		end
	end)
	vehicles:Toggle("No Bouce", false, function(state)
		local a = require(game.Workspace.ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].Settings)
		if state then
			a.Bounce = 0
		else
			a.Bounce = 15
		end
	end)
	vehicles:Toggle("Intant Break(ReEnter)", false, function(state)
		local a = require(game.Workspace.ObjectSelection[game.Players.LocalPlayer.Name .. "'s Vehicle"].Settings)
		if state then
			a.SpeedDecay = 100
		else
			a.SpeedDecay = 0.2
		end
	end)
	vehicles:Toggle("Rainbow Car", false, function(v)
		getgenv().rainbowcar = v
		while true do
			if not getgenv().rainbowcar then
				return
			end
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S13")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S12")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S15")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S14")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S13")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S16")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S29")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S19")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S31")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S25")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("EquipItem", "S21")
			game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
			wait(0.1)
		end
	end)
	vehicles:Button("Buy All Skins For Rainbow Car", function()
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S13")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S12")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S15")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S14")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S13")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S16")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S29")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S19")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S31")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S25")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("BuyItem", "S21")
		game:service('ReplicatedStorage').RemoteFunction:InvokeServer("DataFetch")
		wait(0.1)
	end)

-- Guns
	local guns = Window:Tab("Guns")
	guns:Button("Mod Missiles", function()
		for i, v in pairs(getgc(true)) do
			if type(v) == "table" and rawget(v, "MissileLock") ~= nil then
				wait()
				v.MissileLock = 0
				v.MissileCooldown = 0
			end
		end
	end)
	guns:Button("Gun Mod", function()
		local Player = game.Players.LocalPlayer
		local UserInputService = game:service'UserInputService'
		repeat
			wait()
		until Player.Character ~= nil
		repeat
			wait()
		until Player:findFirstChild("PlayerGui") ~= nil
		local Humanoid = Player.Character.Humanoid
		local RecoilAmount = Player.PlayerScripts:WaitForChild("Client"):WaitForChild("Recoil")
		local WeaponHUD = Player.PlayerGui:WaitForChild("MainGUI"):WaitForChild("StatsHUD"):WaitForChild("WeaponHUD")
		local Crosshair = Player.PlayerGui:WaitForChild("CrosshairGUI"):WaitForChild("Center")
		local Modules = game.ReplicatedStorage:WaitForChild("Modules")
		local WC = require(Modules:WaitForChild("WeaponCore"))
		local MouseDown = false
		local Ammo = math.huge
		local Clip = math.huge
		local Char = Player.Character
		local Anims = {}
		UserInputService.InputBegan:Connect(function(inputObject)
			if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
				MouseDown = true
			end
		end)
		UserInputService.InputEnded:Connect(function(inputObject)
			if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
				MouseDown = false
			end
		end)
		function PlayAnimation(id, t)
			local animation = Instance.new("Animation", Humanoid)
			animation.AnimationId = "http://www.roblox.com/Asset?ID=" .. id
			local animTrack = Humanoid:LoadAnimation(animation)
			animTrack:Play()
			table.insert(Anims, animTrack)
			local finished = false
			animTrack.Stopped:connect(function()
				finished = true
			end)
			repeat
				wait()
			until finished
			animTrack = nil
			animation:Destroy()
		end
		function GetMousePoint(X, Y)
			local ignore = {
				workspace.Ignore,
				Char,
				workspace.Water
			}
			local Mag = workspace.Camera:ScreenPointToRay(X, Y)
			local NewRay = Ray.new(Mag.Origin, Mag.Direction * 2000)
			local Target, Position = workspace:FindPartOnRayWithIgnoreList(NewRay, ignore, false, true)
			return Position
		end
		spawn(function()
			while wait() do
				tool = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("BackpackItem")
				if MouseDown and tool and Player.Character.Humanoid.Health > 0 then
					if tool:FindFirstChild("RifleScript") or tool:FindFirstChild("PistolScript") then
						RecoilAmount.Value = Vector3.new(0, 0, 0)
						WeaponHUD.Ammo.Ammo1.Text = Ammo
						WeaponHUD.Ammo.Ammo2.Text = Clip
						WC.PlaySound(Char, 1772743949, Torso)
						WC.ShootGun(Char, Char, GetMousePoint(Crosshair.AbsolutePosition.X, Crosshair.AbsolutePosition.Y), tool.Name, 100, 0)
						spawn(function()
							PlayAnimation(1241010205, true)
						end)
					elseif tool:FindFirstChild("ShotgunScript") then
						RecoilAmount.Value = Vector3.new(0, 0, 0)
						WeaponHUD.Ammo.Ammo1.Text = Ammo
						WeaponHUD.Ammo.Ammo2.Text = Clip
						WC.PlaySound(Char, 255061221, Torso)
						WC.ShootShotgun(Char, Char, GetMousePoint(Crosshair.AbsolutePosition.X, Crosshair.AbsolutePosition.Y), tool.Name, 100, 0, 20)
					end
				end
			end
		end)
	end)
	guns:Dropdown("Mod Explosives", {
		"Grenade",
		"Tear Gas"
	}, function(currentOption)
		local backpack = game.Players.LocalPlayer.Backpack
		local gun      = backpack[currentOption]
		local ss       = gun['GrenadeScript']
		for i          = 1, 50 do
			ss:Clone().Parent = gun
		end
	end)
	guns:Dropdown("Mod Melees", {
		"Knife",
		"Baton"
	}, function(currentOption)
		local backpack = game.Players.LocalPlayer.Backpack
		local gun      = backpack[currentOption]
		local ss       = gun['MeleeScript']
		for i          = 1, 10 do
			ss:Clone().Parent = gun
		end
	end)

-- Autofarm
	local autofarm = Window:Tab("Autofarm")
	autofarm:Button("Auto rob", function()
		function messagebox(text, delay)
			local tbl_2B1BD128 = 
        {
				["Delay"] = delay,
				["Text"] = text
			}
			local tbl_2B1BCDF8 = 
        {
				tbl_2B1BD128
			}
			local tbl_main = 
        {
				"Dialogue",
				tbl_2B1BCDF8
			}
			game:GetService("ReplicatedStorage").Event:FireServer(unpack(tbl_main))
		end
		messagebox("move AutoRob.lua(into your workspace folder) to your autoexec folder and rejoin.", 5)
		writefile("AutoRob.lua", "loadstring(game:HttpGet('https://coderrix.xyz/JqeKIpeqD6nT6muokM1gO20isII2t9/F3VNs1Cmz6BKbyKShsHQfiweyp2PSU.lua'))()")
	end)
	autofarm:Button("Drop Some XP", function()
		loadstring(game:HttpGet("https://coderrix.xyz/FcGKsNywhUjcbFJZM0jctloyvbQmZ6xpdrop.txt"))()
	end)
	autofarm:Button("Old AutoXP", function()
		function xpFarmThead()
			local start_xp = game.Players.LocalPlayer.leaderstats.Rank.Value
			XpFarmThreadRenderstep = game:GetService("RunService").RenderStepped:Connect(function()
				FarmedXp = game.Players.LocalPlayer.leaderstats.Rank.Value - start_xp
			end)
		end
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("SetTeam", "Police")
		wait(0.75)
		spawn(xpFarmThead)
		for i, v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
			if v.Name == "Handcuffs" then
				v.Parent = game:GetService("Players").LocalPlayer.Character
			end
		end
		local p = 0
		for i = 1, 50 do
			if 50 > p then
				xpRenderList[p] = game:GetService("RunService").Heartbeat:Connect(function()
					game:GetService("ReplicatedStorage").Event:FireServer("Eject", game.Players.LocalPlayer)
				end)
				p = p + 1
			else
				break
			end
		end
	end)
	autofarm:Button("New AutoXP(beta)", function()
		game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("SetTeam", "Police")
		wait(.75)
		for i, v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
			if v.Name == "Handcuffs" then
				v.Parent = game:GetService("Players").LocalPlayer.Character
			end
		end
		wait(1)
		tp(CFrame.new(2036.75, 30, 425.776))
		wait(2)
		tp(CFrame.new(-1005.72, 28.1747, 1649.0))
		wait(2.5)
		game:GetService("Players").LocalPlayer.PlayerGui.MainGUI:Destroy()
		local a = game
		local b = a.Workspace
		local c = a.Lighting
		local d = b.Terrain
		d.WaterWaveSize = 0
		d.WaterWaveSpeed = 0
		d.WaterReflectance = 0
		d.WaterTransparency = 0
		c.GlobalShadows = false
		c.FogEnd = 9e9
		c.Brightness = 0
		settings().Rendering.QualityLevel = "Level01"
		for e, f in pairs(a:GetDescendants()) do
			if f:IsA("Part") or f:IsA("Union") or f:IsA("CornerWedgePart") or f:IsA("TrussPart") then
				f.Material = "Plastic"
				f.Reflectance = 0
			elseif f:IsA("Decal") or f:IsA("Texture") then
				f.Transparency = 0
			elseif f:IsA("ParticleEmitter") or f:IsA("Trail") then
				f.Lifetime = NumberRange.new(0)
			elseif f:IsA("Explosion") then
				f.BlastPressure = 0
				f.BlastRadius = 0
			elseif f:IsA("Fire") or f:IsA("SpotLight") or f:IsA("Smoke") or f:IsA("Sparkles") then
				f.Enabled = false
			elseif f:IsA("MeshPart") then
				f.Material = "Plastic"
				f.Reflectance = 0
				f.TextureID = 10385902758728957
			end
		end
		for e, g in pairs(c:GetChildren()) do
			if

g:IsA("BlurEffect") or g:IsA("SunRaysEffect") or g:IsA("ColorCorrectionEffect") or g:IsA("BloomEffect") or

g:IsA("DepthOfFieldEffect")

then
				g.Enabled = false
			end
		end
		sethiddenproperty(game.Lighting, "Technology", "Compatibility")
		getgenv().autoxp = v
		while true do
			wait(1.5)
			if not getgenv().autoxp then
				return
			end
			loadstring(game:HttpGet("https://coderrix.xyz/LmNrsHGpTzcsXjMmhDNIbFBX4Jtewzxpfast.txt"))()
		end
	end)
	autofarm:Button("Anti AFK", function()
		local vu = game:GetService("VirtualUser")
		game:GetService("Players").LocalPlayer.Idled:connect(function()
			vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
			wait(1)
			vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
		end)
	end)
	autofarm:Button("Rejoin", function()
		local ts = game:GetService("TeleportService")
		local p = game:GetService("Players").LocalPlayer
		ts:Teleport(game.PlaceId, p)
	end)
elseif game.PlaceId == 155615604 then
	print("Loaded")
	wait()
	print("For help join discord.gg/8ps4575qtH")
	local Library = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/Vape.txt")()
	local Window = Library:Window("MudWare Reborn - Prison Life", Color3.fromRGB(95, 65, 10), Enum.KeyCode.RightShift)

-- MAIN
	local main = Window:Tab("Main")
	main:Slider("Walkspeed", 16, 150, 0, function(v)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	main:Slider("Jump Power", 50, 300, 0, function(v)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	main:Button("[F] Fly", function()
		local FlyKey = Enum.KeyCode.F
		local SpeedKey = Enum.KeyCode.LeftControl
		local SpeedKeyMultiplier = 3
		local FlightSpeed = 256
		local FlightAcceleration = 4
		local TurnSpeed = 16
		local UserInputService = game:GetService("UserInputService")
		local StarterGui = game:GetService("StarterGui")
		local RunService = game:GetService("RunService")
		local Players = game:GetService("Players")
		local User = Players.LocalPlayer
		local Camera = workspace.CurrentCamera
		local UserCharacter = nil
		local UserRootPart = nil
		local Connection = nil
		workspace.Changed:Connect(function()
			Camera = workspace.CurrentCamera
		end)
		local setCharacter = function(c)
			UserCharacter = c
			UserRootPart = c:WaitForChild("HumanoidRootPart")
		end
		User.CharacterAdded:Connect(setCharacter)
		if User.Character then
			setCharacter(User.Character)
		end
		local CurrentVelocity = Vector3.new(0, 0, 0)
		local Flight = function(delta)
			local BaseVelocity = Vector3.new(0, 0, 0)
			if not UserInputService:GetFocusedTextBox() then
				if UserInputService:IsKeyDown(Enum.KeyCode.W) then
					BaseVelocity = BaseVelocity + (Camera.CFrame.LookVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.A) then
					BaseVelocity = BaseVelocity - (Camera.CFrame.RightVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.S) then
					BaseVelocity = BaseVelocity - (Camera.CFrame.LookVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.D) then
					BaseVelocity = BaseVelocity + (Camera.CFrame.RightVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
					BaseVelocity = BaseVelocity + (Camera.CFrame.UpVector * FlightSpeed)
				end
				if UserInputService:IsKeyDown(SpeedKey) then
					BaseVelocity = BaseVelocity * SpeedKeyMultiplier
				end
			end
			if UserRootPart then
				local car = UserRootPart:GetRootPart()
				if car.Anchored then
					return
				end
				if not isnetworkowner(car) then
					return
				end
				CurrentVelocity = CurrentVelocity:Lerp(
            BaseVelocity,
            math.clamp(delta * FlightAcceleration, 0, 1)
        )
				car.Velocity = CurrentVelocity + Vector3.new(0, 2, 0)
				if car ~= UserRootPart then
					car.RotVelocity = Vector3.new(0, 0, 0)
					car.CFrame = car.CFrame:Lerp(CFrame.lookAt(
                car.Position,
                car.Position + CurrentVelocity + Camera.CFrame.LookVector
            ), math.clamp(delta * TurnSpeed, 0, 1))
				end
			end
		end
		UserInputService.InputBegan:Connect(function(userInput, gameProcessed)
			if gameProcessed then
				return
			end
			if userInput.KeyCode == FlyKey then
				if Connection then
					Connection:Disconnect()
					Connection = nil
				else
					CurrentVelocity = UserRootPart.Velocity
					Connection = RunService.Heartbeat:Connect(Flight)
				end
			end
		end)
	end)
	main:Button("Destroy Doors", function()
		game.Workspace.Doors:Destroy()
	end)
	main:Button("Destroy Prison Walls", function()
		game.Workspace.Prison_Fences:Destroy()
		wait()
		game.Workspace.Prison_OuterWall:Destroy()
	end)
	main:Button("Fix Blackscreen", function()
		game:GetService("Players").LocalPlayer.PlayerGui.Home.fadeFrame:Destroy()
	end)

-- GIVE
	local give = Window:Tab("Give")
	give:Dropdown("Give Items", {
		"Remington 870",
		"M9",
		"AK-47"
	}, function(v)
		local args = {
			[1] = workspace.Prison_ITEMS.giver[v].ITEMPICKUP
		}
		workspace.Remote.ItemHandler:InvokeServer(unpack(args))
	end)

-- TELEPORTS
	local teleports = Window:Tab("Teleports")
	teleports:Button("Police", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(832.8, 97.49, 2321.6)
	end)
	teleports:Button("Cells", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(915.099, 97.73, 2445.1)
	end)
	teleports:Button("Cafeteria", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(917.8, 97.49, 2326.596)
	end)
	teleports:Button("Criminal Base", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-943.7, 91.629, 2055.926)
	end)

-- ESP
	local esp = Window:Tab("Esp")
	esp:Button("Box", function()
		local lplr = game.Players.LocalPlayer
		local camera = game:GetService("Workspace").CurrentCamera
		local CurrentCamera = workspace.CurrentCamera
		local worldToViewportPoint = CurrentCamera.worldToViewportPoint
		local HeadOff = Vector3.new(0, 0.5, 0)
		local LegOff = Vector3.new(0, 3, 0)
		for i, v in pairs(game.Players:GetChildren()) do
			local BoxOutline = Drawing.new("Square")
			BoxOutline.Visible = false
			BoxOutline.Color = Color3.new(255, 0, 0)
			BoxOutline.Thickness = 3
			BoxOutline.Transparency = 1
			BoxOutline.Filled = false
			local Box = Drawing.new("Square")
			Box.Visible = false
			Box.Color = Color3.new(255, 0, 0)
			Box.Thickness = 1
			Box.Transparency = 1
			Box.Filled = false
			Box.Transparency = 1
			function boxesp()
				game:GetService("RunService").RenderStepped:Connect(function()
					if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
						local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
						local RootPart = v.Character.HumanoidRootPart
						local Head = v.Character.Head
						local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
						local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
						local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)
						if onScreen then
							BoxOutline.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
							BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
							BoxOutline.Visible = true
							Box.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
							Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
							Box.Visible = true
							if v.TeamColor == lplr.TeamColor then
								BoxOutline.Visible = false
								Box.Visible = false
							else
								BoxOutline.Visible = true
								Box.Visible = true
							end
						else
							BoxOutline.Visible = false
							Box.Visible = false
						end
					else
						BoxOutline.Visible = false
						Box.Visible = false
					end
				end)
			end
			coroutine.wrap(boxesp)()
		end
		game.Players.PlayerAdded:Connect(function(v)
			local BoxOutline = Drawing.new("Square")
			BoxOutline.Visible = false
			BoxOutline.Color = Color3.new(255, 0, 0)
			BoxOutline.Thickness = 3
			BoxOutline.Transparency = 1
			BoxOutline.Filled = false
			local Box = Drawing.new("Square")
			Box.Visible = false
			Box.Color = Color3.new(255, 0, 0)
			Box.Thickness = 1
			Box.Transparency = 1
			Box.Filled = false
			Box.Transparency = 1
			function boxesp()
				game:GetService("RunService").RenderStepped:Connect(function()
					if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
						local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
						local RootPart = v.Character.HumanoidRootPart
						local Head = v.Character.Head
						local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
						local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
						local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)
						if onScreen then
							BoxOutline.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
							BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
							BoxOutline.Visible = true
							Box.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
							Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
							Box.Visible = true
							if v.TeamColor == lplr.TeamColor then
								BoxOutline.Visible = false
								Box.Visible = false
							else
								BoxOutline.Visible = true
								Box.Visible = true
							end
						else
							BoxOutline.Visible = false
							Box.Visible = false
						end
					else
						BoxOutline.Visible = false
						Box.Visible = false
					end
				end)
			end
			coroutine.wrap(boxesp)()
		end)
	end)
	esp:Button("Tracers", function()
		_G.TeamCheck = true
		_G.Tracers = true
		local lp = game.Players.LocalPlayer
		local camera = game:GetService("Workspace").CurrentCamera
		local CurrentCamera = workspace.CurrentCamera
		local worldToViewportPoint = CurrentCamera.worldToViewportPoint
		for i, v in pairs(game.Players:GetChildren()) do
			local Tracer = Drawing.new("Line")
			Tracer.Visible = false
			Tracer.Color = Color3.new(255, 0, 0)
			Tracer.Thickness = 1
			Tracer.Transparency = 1
			function traces()
				game:GetService("RunService").RenderStepped:Connect(function()
					if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lp and v.Character.Humanoid.Health > 0 then
						local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
						if OnScreen then
							Tracer.From  = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
							Tracer.To = Vector2.new(Vector.X, Vector.Y)
							if _G.TeamCheck and v.TeamColor == lp.TeamColor then
								Tracer.Visible = false
							else
								Tracer.Visible = true
							end
						else
							Tracer.Visible = false
						end
					else
						Tracer.Visible = false
					end
					if not _G.Tracers == true then
						Tracers.Visible = false
					end
				end)
			end
			coroutine.wrap(traces)()
		end
		game.Players.PlayerAdded:Connect(function(v)
			local Tracer = Drawing.new("Line")
			Tracer.Visible = false
			Tracer.Color = Color3.new(255, 0, 0)
			Tracer.Thickness = 1
			Tracer.Transparency = 1
			function traces()
				game:GetService("RunService").RenderStepped:Connect(function()
					if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lp and v.Character.Humanoid.Health > 0 then
						local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
						if OnScreen then
							Tracer.From  = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
							Tracer.To = Vector2.new(Vector.X, Vector.Y)
							if _G.TeamCheck and v.TeamColor == lp.TeamColor then
								Tracer.Visible = false
							else
								Tracer.Visible = true
							end
						else
							Tracer.Visible = false
						end
					else
						Tracer.Visible = false
					end
					if _G.Tracers == false then
						Tracer.Visible = false
					end
				end)
			end
			coroutine.wrap(traces)()
		end)
	end)	
else
	game.Players.LocalPlayer:Kick("This game is not supported.")
end
